import math

# Exerc√≠cio 1: crie uma fun√ß√£o que receba dois n√∫meros e retorne o maior deles


def retornaMaior(x: int, y: int):
    """A fun√ßa√µ recebe dois n√∫meros e retorna o maior deles"""
    if x > y:
        return print(f"{x} √© o maior n√∫mero")
    elif x < y:
        return print(f"{y} √© o maior n√∫mero")
    else:
        return print("os dois s√£o iguais")


retornaMaior(9, 4)

# Exerc√≠cio 2: crie um fun√ß√£o que calcule a m√©dia aritm√©tica dos
# n√∫meros contidos em uma lista

lista_num = list(range(1, 652))


def calcula_media(lista: list):
    """A fun√ß√£o calcula a m√©dia aritm√©tica de n√∫meros em uma lista"""
    total = 0
    lista_len = lista.__len__()

    for num in lista:
        total += num

    media = total / lista_len

    return print(f"A m√©dia dos n√∫meros dessa lista √©: {media}")


calcula_media(lista_num)

# Exerc√≠cio 3: Fa√ßa um programa que, dado um valor n qualquer,
# tal que n > 1, imprima na tela um quadrado feito de asteriscos
# de lado de tamanho n.

n = 3


def returnSquare(n: int):
    for line in range(n):
        print(n * "*")


returnSquare(n)

# üöÄ Exerc√≠cio 4: Crie uma fun√ß√£o que receba uma lista de nomes
# e retorne o nome com a maior quantidade de caracteres.
# Por exemplo, para ["Jos√©", "Lucas", "N√°dia", "Fernanda",
# "Cairo", "Joana"], o retorno deve ser "Fernanda".

namelist = ["Jos√©", "Lucas", "N√°dia", "Fernanda", "Pin", "Joana"]


def returnMaiorNome(nameList: list):
    maiorNome = ""
    for name in nameList:
        if len(name) > len(maiorNome):
            maiorNome = name
    return maiorNome


print(returnMaiorNome(namelist))


# Exerc√≠cio 5: Considere que a cobertura da tinta
# √© de 1 litro para cada 3 metros quadrados e que
# a tinta √© vendida em latas de 18 litros, que custam R$ 80,00.
# Crie uma fun√ß√£o que retorne dois valores em uma tupla contendo
# a quantidade de latas de tinta a serem compradas e o pre√ßo
# total a partir do tamanho de uma parede (em m¬≤).

area = 156.2


def calcularTinta(area: float):
    rendimento = 1 / 3
    litrosUtilizados = area * rendimento
    galaoVolume = 18.0
    galao_price = 80.0
    galoesTotais = math.ceil(litrosUtilizados / galaoVolume)
    valorTotal = galoesTotais * galao_price
    return tuple((galoesTotais, valorTotal))


print(calcularTinta(area))

# Exerc√≠cio 6: Crie uma fun√ß√£o que receba os tr√™s lado de um
# tri√¢ngulo e informe qual o tipo de tri√¢ngulo formado ou
# "n√£o √© triangulo", caso n√£o seja poss√≠vel formar um tri√¢ngulo.

a = 3
b = 3
c = 5


def classificaTriangulo(a: float, b: float, c: float):
    isTriangle = a + b > c and a + c > b and b + c > a
    if isTriangle:
        if a == b == c:
            print("Tri√¢ngulo equil√°tero")
        elif a == b or a == c or b == c:
            print("Tri√¢ngulo is√≥sceles")
        else:
            print("Tri√¢ngulo escaleno")
    else:
        print("N√£o √© tri√¢ngulo")


classificaTriangulo(a, b, c)
